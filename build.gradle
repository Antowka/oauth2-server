apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'org.liquibase.gradle'

buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

		classpath("org.liquibase:liquibase-gradle-plugin:1.2.0")
		classpath("org.liquibase:liquibase-core:3.4.2")
		classpath("org.postgresql:postgresql:9.4.1208.jre7")
		classpath("org.liquibase.ext:liquibase-hibernate4.2:3.4")
		classpath("org.springframework:spring-beans:4.2.6.RELEASE")
		classpath("org.springframework:spring-orm:4.2.6.RELEASE")
		classpath("org.springframework:spring-context:4.2.6.RELEASE")

		classpath("org.springframework.data:spring-data-jpa:1.10.1.RELEASE")
		classpath("org.hibernate:hibernate-core:4.2.0.Final")
		classpath("org.hibernate:hibernate-entitymanager:4.2.0.Final")
	}
}

jar {
	baseName = 'auth'
	version = ''

	manifest {
		attributes( "Class-Path": "ru.antowka.OauthServerApplication" )
	}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-tomcat')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2:1.1.0.RELEASE')
	compile('org.projectlombok:lombok:1.16.6')
	compile('org.springframework.data:spring-data-rest-webmvc')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.postgresql:postgresql:9.4.1208.jre7')
	testCompile('org.springframework.boot:spring-boot-starter-test:1.3.5.RELEASE')
}

liquibase {
	activities {
		main {
			changeLogFile '/home/anton/Desktop/Projects/Garage/Project/oauth-server/src/main/resources/db/changelog/master.xml'
			url 'jdbc:postgresql://127.0.0.1:5432/auth'
			username 'root'
			password 'root'
			referenceUrl 'hibernate:spring:*?dialect=org.hibernate.dialect.PostgreSQLDialect'
			referenceDriver "liquibase.ext.hibernate.database.connection.HibernateDriver"
		}
	}
}


task copyTask(type: Copy) {
	from 'build/libs'
	into 'docker'
	include '*.jar'
	exclude { details -> details.file.name.endsWith('.jar') && details.file.text.contains('staging') }
}

build.finalizedBy(copyTask)